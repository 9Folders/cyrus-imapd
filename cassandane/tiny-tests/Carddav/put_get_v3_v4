#!perl
use Cassandane::Tiny;

sub test_put_get_v3_v4
    :needs_component_httpd :min_version_3_7
{
    my ($self) = @_;

    my $CardDAV = $self->{carddav};
    my $Id = $CardDAV->NewAddressBook('foo');
    $self->assert_not_null($Id);
    $self->assert_str_equals($Id, 'foo');
    my $href = "$Id/bar.vcf";
    my $uid = "3b678b69-ca41-461e-b2c7-f96b9fe48d68";
    my $image = "R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==";

    my $card = <<EOF;
BEGIN:VCARD
VERSION:3.0
UID:$uid
PHOTO;ENCODING=b;TYPE=GIF:$image
N:Gump;Forrest;;Mr.
FN:Forrest Gump
ORG:Bubba Gump Shrimp Co.
TITLE:Shrimp Man
REV:2008-04-24T19:52:43Z
END:VCARD
EOF

    my %Headers = (
      'Content-Type' => 'text/vcard',
      'Authorization' => $CardDAV->auth_header(),
    );

    xlog $self, "PUT vCard v3 with text UID";
    my $Response = $CardDAV->{ua}->request('PUT', $CardDAV->request_url($href), {
        content => $card,
        headers => \%Headers,
    });
    $self->assert_num_equals(201, $Response->{status});

    xlog $self, "GET as vCard v4";
    my $response = $CardDAV->Request('GET', $href, '',
                                     'Accept' => 'text/vcard; version=4.0');
    my $newcard = $response->{content};
    $newcard =~ s/\r?\n[ \t]+//gs;  # unfold long properties
    $self->assert_matches(qr/UID:urn:uuid:$uid/, $newcard);
    $self->assert_matches(qr/PHOTO:data:image\/gif;base64,$image/, $newcard);

    xlog $self, "PUT same vCard as v4 with URL (urn) UID";
    $card =~ s/VERSION:3.0/VERSION:4.0/;
    $card =~ s/UID:/UID:urn:uuid:/;
    $card =~ s/PHOTO;ENCODING=b;TYPE=GIF:/PHOTO:data:image\/gif;base64,/;

    $Response = $CardDAV->{ua}->request('PUT', $CardDAV->request_url($href), {
        content => $card,
        headers => \%Headers,
    });
    $self->assert_num_equals(204, $Response->{status});

    xlog $self, "GET as vCard v3";
    $response = $CardDAV->Request('GET', $href, '',
                                  'Accept' => 'text/vcard; version=3.0');
    $newcard = $response->{content};
    $newcard =~ s/\r?\n[ \t]+//gs;  # unfold long properties
    $self->assert_matches(qr/UID:$uid/, $newcard);
    $self->assert_matches(qr/PHOTO;ENCODING=[bB];TYPE=GIF:$image/, $newcard);

    xlog $self, "PUT vCard v3 with text UID";
    $card =~ s/VERSION:4.0/VERSION:3.0/;
    $card =~ s/UID:urn:uuid:/UID:/;
    $card =~ s/PHOTO:data:image\/gif;base64,/PHOTO;ENCODING=b;TYPE=GIF:/;

    xlog $self, "GET as vCard v4";
    $response = $CardDAV->Request('GET', $href, '',
                                  'Accept' => 'text/vcard; version=4.0');
    $newcard = $response->{content};
    $newcard =~ s/\r?\n[ \t]+//gs;  # unfold long properties
    $self->assert_matches(qr/UID:urn:uuid:$uid/, $newcard);
    $self->assert_matches(qr/PHOTO:data:image\/gif;base64,$image/, $newcard);

    $Response = $CardDAV->{ua}->request('PUT', $CardDAV->request_url($href), {
        content => $card,
        headers => \%Headers,
    });
    $self->assert_num_equals(204, $Response->{status});
}
